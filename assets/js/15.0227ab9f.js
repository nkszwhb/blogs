(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{537:function(t,a,s){"use strict";s.r(a);var e=s(9),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git-add"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-add"}},[t._v("#")]),t._v(" git add")]),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[s("code",[t._v("git add")]),t._v("命令用于将变化的文件，从工作区提交到暂存区。它的作用就是告诉 Git，下一次哪些变化需要保存到仓库区。用户可以使用"),s("code",[t._v("git status")]),t._v("命令查看目前的暂存区放置了哪些文件。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将指定文件放入暂存区")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将指定目录下所有变化的文件，放入暂存区")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("directory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将当前目录下所有变化的文件，放入暂存区")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),s("h2",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),s("p",[s("code",[t._v("-u")]),t._v("参数表示只添加暂存区已有的文件（包括删除操作），但不添加新增的文件。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -u\n")])])]),s("p",[s("code",[t._v("-A")]),t._v("或者"),s("code",[t._v("--all")]),t._v("参数表示追踪所有操作，包括新增、修改和删除。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n")])])]),s("p",[t._v("Git 2.0 版开始，"),s("code",[t._v("-A")]),t._v("参数成为默认，即"),s("code",[t._v("git add .")]),t._v("等同于"),s("code",[t._v("git add -A")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("-f")]),t._v("参数表示强制添加某个文件，不管"),s("code",[t._v(".gitignore")]),t._v("是否包含了这个文件。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("fileName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("code",[t._v("-p")]),t._v("参数表示进入交互模式，指定哪些修改需要添加到暂存区。即使是同一个文件，也可以只提交部分变动。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -p\n")])])]),s("p",[t._v("注意，Git 2.0 版以前，"),s("code",[t._v("git add")]),t._v("默认不追踪删除操作。即在工作区删除一个文件后，"),s("code",[t._v("git add")]),t._v("命令不会将这个变化提交到暂存区，导致这个文件继续存在于历史中。Git 2.0 改变了这个行为。")]),t._v(" "),s("h2",{attrs:{id:"实现细节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现细节"}},[t._v("#")]),t._v(" 实现细节")]),t._v(" "),s("p",[t._v("通过"),s("code",[t._v("git add")]),t._v("这个命令，工作区里面那些新建或修改过的文件，会加入"),s("code",[t._v(".git/objects/")]),t._v("目录，文件名是文件内容的 SHA1 哈希值。"),s("code",[t._v("git add")]),t._v("命令同时还将这些文件的文件名和对应的哈希值，写入"),s("code",[t._v(".git/index")]),t._v("文件，每一行对应一个文件。")]),t._v(" "),s("p",[t._v("下面是"),s("code",[t._v(".git/index")]),t._v("文件的内容。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("data/letter.txt 5e40c0877058c504203932e5136051cf3cd3519b\n")])])]),s("p",[t._v("上面代码表示，"),s("code",[t._v("data/letter.txt")]),t._v("文件的哈希值是"),s("code",[t._v("5e40c087...")]),t._v("。可以根据这个哈希值到"),s("code",[t._v(".git/objects/")]),t._v("目录下找到添加后的文件。")])])}),[],!1,null,null,null);a.default=v.exports}}]);