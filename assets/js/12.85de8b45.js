(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{535:function(s,t,a){"use strict";a.r(t);var n=a(9),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"eslint-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint-是什么"}},[s._v("#")]),s._v(" Eslint 是什么")]),s._v(" "),a("h3",{attrs:{id:"编码规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编码规范"}},[s._v("#")]),s._v(" 编码规范")]),s._v(" "),a("p",[s._v("每个程序员都有自己的编码习惯，最常见的莫过于：")]),s._v(" "),a("ul",[a("li",[s._v("有的人写代码一行代码结尾必须加分号 "),a("code",[s._v(";")]),s._v("，有的人觉得不加分号 "),a("code",[s._v(";")]),s._v(" 更好看；")]),s._v(" "),a("li",[s._v("有的人写代码一行代码不会超过 80 个字符，认为这样看起来简洁明了，有的人喜欢把所有逻辑都写在一行代码上，觉得别人看不懂的代码很牛逼；")]),s._v(" "),a("li",[s._v("有的人使用变量必然会先定义 "),a("code",[s._v("var a = 10;")]),s._v("，而粗心的人写变量可能没有定义过就直接使用 "),a("code",[s._v("b = 10;")]),s._v("；")])]),s._v(" "),a("h3",{attrs:{id:"lint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lint"}},[s._v("#")]),s._v(" LInt")]),s._v(" "),a("p",[s._v("如果你写自己的项目怎么折腾都没关系，但是在公司中老板希望每个人写出的代码都要符合一个统一的规则，这样别人看源码就能够看得懂，因为源码是符合统一的编码规范制定的。")]),s._v(" "),a("p",[s._v("那么问题来了，总不能每个人写的代码老板都要一行行代码去检查吧，这是一件很蠢的事情。凡是重复性的工作，都应该被制作成工具来节约成本。这个工具应该做两件事情：")]),s._v(" "),a("ul",[a("li",[s._v("提供编码规范；")]),s._v(" "),a("li",[s._v("提供自动检验代码的程序，并打印检验结果：告诉你哪一个文件哪一行代码不符合哪一条编码规范，方便你去修改代码。")])]),s._v(" "),a("p",[s._v("Lint 因此而诞生。")]),s._v(" "),a("h3",{attrs:{id:"eslint-的含义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint-的含义"}},[s._v("#")]),s._v(" Eslint 的含义")]),s._v(" "),a("p",[s._v("Lint 是检验代码格式工具的一个统称，具体的工具有 "),a("code",[s._v("Jslint")]),s._v(" 、 "),a("code",[s._v("Eslint")]),s._v(" 等等 ...........")]),s._v(" "),a("h2",{attrs:{id:"使用-eslint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-eslint"}},[s._v("#")]),s._v(" 使用 Eslint")]),s._v(" "),a("h3",{attrs:{id:"创建项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建项目"}},[s._v("#")]),s._v(" 创建项目")]),s._v(" "),a("p",[a("code",[s._v("npm init")]),s._v(" 在项目根目录下生成 "),a("code",[s._v("package.json")]),s._v(" 文件。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" Desktop\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" eslinttest\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" eslinttest\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" init -y\n")])])]),a("h3",{attrs:{id:"安装依赖包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖包"}},[s._v("#")]),s._v(" 安装依赖包")]),s._v(" "),a("p",[a("code",[s._v("--save-dev")]),s._v(" 会把 eslint 安装到 package.json 文件中的 devDependencies 属性中，意思是只是开发阶段用到这个包，上线时就不需要这个包了。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" eslint --save-dev\n")])])]),a("h3",{attrs:{id:"设置-package-json-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置-package-json-文件"}},[s._v("#")]),s._v(" 设置 package.json 文件")]),s._v(" "),a("p",[s._v("打开 package.json 文件，修改 script 属性如下：")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo \\"Error: no test specified\\" && exit 1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint ."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lint-init"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint --init"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("ul",[a("li",[a("p",[s._v("script 属性的意思是脚本，使用方法是在 cmd 窗口中输入 "),a("code",[s._v("npm run 指令")]),s._v(" 的形式，如："),a("code",[s._v("npm run lint-init")]),s._v("；")])]),s._v(" "),a("li",[a("p",[a("code",[s._v('"lint-init": "eslint --init"')]),s._v(" 这个脚本是为了生成 .eslintrc.js 文件，在介绍 Lint 的时候说到 Lint 应该提供编码规范，规范写在哪里，就写在这个文件，所以我们需要创建它；")])]),s._v(" "),a("li",[a("p",[a("code",[s._v('"lint": "eslint ."')]),s._v(" 在介绍 Lint 的时候也说到 Lint 应该提供自动校验代码的程序，这个脚本是让 Lint 自动检验当前目录下所有的 .js 文件。")])])]),s._v(" "),a("h3",{attrs:{id:"创建-eslint-js-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-eslint-js-文件"}},[s._v("#")]),s._v(" 创建 .eslint.js 文件")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run lint-init\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" eslinttest@1.0.0 lint-init /Users/whb/Desktop/test/eslinttest\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" eslint --init\n\n? How would you like to use ESLint? … \n  To check syntax only //只检测语法\n❯ To check syntax and "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" problems // 检测语法并发现问题\n  To check syntax, "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" problems, and enforce code style // 检测语法发现问题并强制使用代码风格\n  \n? What "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" of modules does your project use? … \n❯ JavaScript modules "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("import/export"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" // ES Module\n  CommonJS "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("require/exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  // CommonJs 规范\n  None of these\n \n? Which framework does your project use? … \n  React\n  Vue.js\n❯ None of these\n\n? Does your project use TypeScript? › No / Yes\n? Where does your code run? …  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Press "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("space"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" to select, "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" to toggle all, "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" to invert selection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  Browser\n✔ Node\n\n? What "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" you want your config "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" to be in? …  // 配置文件写入什么格式文件\n  JavaScript // js文件\n  YAML // YAML文件\n❯ JSON // json文件\n\nSuccessfully created .eslintrc.json "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" /Users/whb/Desktop/test/eslinttest\n\n")])])]),a("h2",{attrs:{id:"代码检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码检测"}},[s._v("#")]),s._v(" 代码检测")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run lint\n")])])]),a("h3",{attrs:{id:"创建-index-js-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-index-js-文件"}},[s._v("#")]),s._v(" 创建 index.js 文件")]),s._v(" "),a("p",[s._v("在根目录下创建 src/index.js 文件，内容如下，接下来就使用 Eslint 来检验这个 .js 文件是否符合编码规范。")]),s._v(" "),a("p",[s._v("此时的目录结构应该为：")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v("- eslinttest\n    + .eslintrc.js\n    + package.json\n    - src\n        + index.js\n")])])]),a("h3",{attrs:{id:"校验代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#校验代码"}},[s._v("#")]),s._v(" 校验代码")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run lint\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":7   error  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lint'")]),s._v(" is assigned a value but never used  no-unused-vars\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":14  error  Strings must use doublequote               quotes\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":22  error  Missing semicolon                          semi\n\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" problems "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" errors, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" warnings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" errors, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" warnings potentially fixable with the "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("--fix"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" option.\n")])])]),a("p",[s._v("这里报了三个错误，分别是：")]),s._v(" "),a("ul",[a("li",[s._v("index.js 第1行第7个字符，报错编码规则为 "),a("code",[s._v("no-unused-vars")]),s._v("：变量 lint 只定义了，但是未使用；")]),s._v(" "),a("li",[s._v("index.js 第1行第14个字符，报错编码规则为 "),a("code",[s._v("quotes")]),s._v("：编码规范字符串只能使用双引号，这里却使用了单引号；")]),s._v(" "),a("li",[s._v("index.js 第1行第22个字符，报错编码规则为 "),a("code",[s._v("semi")]),s._v("：编码规范每行代码结尾必须加分号，这里没有加分号。")])]),s._v(" "),a("p",[s._v("当我们熟悉了编码规范之后，只需进行响应的修改就可以使代码形成统一的风格。刚开始如果对编码规范具体某一条规则不了解的话，可以在 "),a("a",{attrs:{href:"https://eslint.cn/docs/rules/",target:"_blank",rel:"noopener noreferrer"}},[s._v("eslint规则表"),a("OutboundLink")],1),s._v(" 查看用法。")]),s._v(" "),a("h3",{attrs:{id:"设置-fix-参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置-fix-参数"}},[s._v("#")]),s._v(" 设置 --fix 参数")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo \\"Error: no test specified\\" && exit 1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint . --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lint-init"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint --init"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("说明：这里给 "),a("code",[s._v('"lint": "eslint src --fix",')]),s._v(" 加上 "),a("code",[s._v("--fix")]),s._v(" 参数，是 Eslint 提供的自动修复基础错误的功能。")]),s._v(" "),a("p",[s._v("此时运行 "),a("code",[s._v("npm run lint")]),s._v(" 会看到少了两条报错信息，并不是说编码规范变了，而是 Eslint 自动修复了基础错误，打开 index.js 文件，可看到字符串自动变成了双引号，并且代码末尾也加上了分号。可惜的是 --fix 只能修复基础的不影响代码逻辑的错误，像 no-unused-vars 这种错误只能手动修改。")]),s._v(" "),a("h2",{attrs:{id:"配置文件讲解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件讲解"}},[s._v("#")]),s._v(" 配置文件讲解")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"env"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"es2021"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  \t"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extends"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint:recommended"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"parserOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ecmaVersion"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sourceType"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"module"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"object-shorthand"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("该文件导出一个对象，对象包含属性 "),a("code",[s._v("env")]),s._v("、"),a("code",[s._v("extends")]),s._v("、"),a("code",[s._v("parserOptions")]),s._v("、"),a("code",[s._v("plugins")]),s._v("、"),a("code",[s._v("rules")]),s._v(" 五个属性。")]),s._v(" "),a("h3",{attrs:{id:"env、parseroptions、plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#env、parseroptions、plugins"}},[s._v("#")]),s._v(" env、parserOptions、plugins")]),s._v(" "),a("p",[s._v("这三个放在一起将是因为你只需要知道它们是干嘛的：我的程序里要用到 ES6 、React 、JSX 语法，这几个属性就是让 Eslint 能够检验到这些语法的。")]),s._v(" "),a("p",[s._v("Eslint 创建的时候提供这么一个自动生成配置文件的工具，并且是命令行交互的方式，我只需要告诉它我要用 ES6 、React 、JSX 语法，它会自动进行相关配置满足我的要求即可。")]),s._v(" "),a("h3",{attrs:{id:"extends"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extends"}},[s._v("#")]),s._v(" extends")]),s._v(" "),a("p",[s._v("前面一直说检验代码遵循编码规范，那到底是什么规范呢。")]),s._v(" "),a("p",[s._v('值为 "eslint:recommended" 的 extends 属性启用一系列核心规则，这些规则是经过前人验证的最佳实践（所谓最佳实践，就是大家伙都觉得应该遵循的编码规范），'),a("strong",[s._v("想知道最佳实践具体有哪些编码规范")]),s._v("，可以在 "),a("a",{attrs:{href:"https://eslint.cn/docs/rules/",target:"_blank",rel:"noopener noreferrer"}},[s._v("eslint规则表"),a("OutboundLink")],1),s._v("  中查看被标记为 √ 的规则项。")]),s._v(" "),a("p",[s._v('如果觉得官方提供的默认规则不好用，可以自定义规则配置文件，然后发布成 Npm 包，eslint-config-airbnb 就是别人自定义的编码规范，使用 npm 安装后，在我们自己的 .eslintrc.js 中进行配置 "extends": "airbnb"，eslint-config 这个前缀可以省略不写，这样我们就使用了 eslint-config-airbnb 中的规则，而不是官方的规则 "extends":"eslint:recommended" 了。关于如何创建自定义规则配置并共享可以参考： '),a("a",{attrs:{href:"https://eslint.cn/docs/developer-guide/shareable-configs",target:"_blank",rel:"noopener noreferrer"}},[s._v("如何自定义规则配置"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v('关于 "airbnb" 编码规范说两句，在接触到大多数开源项目中，大多数的作者都会使用 "airbnb" 编码规范而不是 官方的 "extends": "eslint:recommended" 编码规范。')]),s._v(" "),a("p",[s._v("如果我们觉得 eslint-config-airbnb 规则配置中个别规则并不符合当前项目的要求，可以直接在 .eslintrc.js 配置 rules 属性，优先级高于共享规则 airbnb。")]),s._v(" "),a("h3",{attrs:{id:"rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rules"}},[s._v("#")]),s._v(" rules")]),s._v(" "),a("p",[s._v("配置文件也生成了，我们怎么知道我们的系统会遵循什么规则呢？？")]),s._v(" "),a("p",[s._v("在前面的列子中，使用 "),a("code",[s._v("npm run lint")]),s._v(" 校验出了三处错误，假如我们的项目中字符串就是要使用单引号而不是双引号，代码结尾就是要不加分号才好看，变量就是定义了可能不会使用，我们可以通过设置 rules 来定义我们自己的编码规范，即规则。")]),s._v(" "),a("p",[s._v("ESLint 附带有大量的规则，修改规则应遵循如下要求：")]),s._v(" "),a("ul",[a("li",[s._v('"off" 或 0 - 关闭规则')]),s._v(" "),a("li",[s._v('"warn" 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出)')]),s._v(" "),a("li",[s._v('"error" 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)')])]),s._v(" "),a("p",[s._v('有的规则没有属性，只需控制是开启还是关闭，像这样："eqeqeq": "off"，有的规则有自己的属性，使用起来像这样："quotes": ["error", "double"]，具体有没有自带属性，可查看 '),a("a",{attrs:{href:"https://eslint.cn/docs/rules/",target:"_blank",rel:"noopener noreferrer"}},[s._v("eslint规则表"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"常用规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用规则"}},[s._v("#")]),s._v(" 常用规则")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// .eslintrc.js ")]),s._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extends"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"airbnb"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"semi"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要求或禁止使用分号代替 ASI")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no-console"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 禁用 console")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"comma-dangle"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"always-multiline"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要求或禁止末尾逗号")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"max-len"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 强制一行的最大长度")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"react/jsx-first-prop-new-line"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"react/jsx-filename-extension"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"space-before-function-paren"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 强制在 function的左括号之前使用一致的空格")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no-unused-expressions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 禁止出现未使用过的表达式")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"allowShortCircuit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"allowTernary"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"arrow-body-style"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// \t要求箭头函数体使用大括号")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"func-names"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要求或禁止使用命名的 function 表达式")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prefer-const"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要求使用 const 声明那些声明后不再被修改的变量")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no-extend-native"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 禁止扩展原生类型")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no-param-reassign"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 禁止对 function 的参数进行重新赋值")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no-restricted-syntax"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 禁用特定的语法")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no-eval"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 禁用 eval()")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no-continue"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 禁用 continue 语句")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"react/jsx-no-bind"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no-unused-vars"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ignoreRestSiblings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 禁止出现未使用过的变量")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no-underscore-dangle"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 禁止标识符中有悬空下划线")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"global-require"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要求 require() 出现在顶层模块作用域中")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"import/no-unresolved"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"import/extensions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jsx-a11y/href-no-hash"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"react/no-array-index-key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"react/require-default-props"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"react/forbid-prop-types"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"react/no-string-refs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"react/no-find-dom-node"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"import/no-extraneous-dependencies"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"import/prefer-default-export"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"react/no-danger"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jsx-a11y/no-static-element-interactions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"parser"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"babel-eslint"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"parserOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sourceType"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"module"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ecmaVersion"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ecmaFeatures"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jsx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"experimentalObjectRestSpread"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"settings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"import/resolver"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"eslint规则忽略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint规则忽略"}},[s._v("#")]),s._v(" eslint规则忽略")]),s._v(" "),a("h3",{attrs:{id:"单行代码忽略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单行代码忽略"}},[s._v("#")]),s._v(" 单行代码忽略")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("单行文件忽略某个规则代码")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// eslint-disable-next-line no-unused-vars")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" lint "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("当行代码忽略所有eslint规则")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" apple "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"apple"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// eslint-disable-line")]),s._v("\n")])])])])]),s._v(" "),a("h3",{attrs:{id:"模块文件忽略-eslint-规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块文件忽略-eslint-规则"}},[s._v("#")]),s._v(" 模块文件忽略 "),a("code",[s._v("eslint")]),s._v(" 规则")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("忽略整个模块文件的eslint 检测：文件首部添加 "),a("code",[s._v("/* eslint-disable */")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* eslint-disable */")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("整个模块忽略单个 "),a("code",[s._v("eslint")]),s._v(" 规则：文件首部添加"),a("code",[s._v("/* eslint-disable <eslint rule> */")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* eslint-disable no-unused-vars */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n")])])])])]),s._v(" "),a("h3",{attrs:{id:"eslintignore-文件忽略配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslintignore-文件忽略配置"}},[s._v("#")]),s._v(" "),a("code",[s._v(".eslintignore")]),s._v(" 文件忽略配置")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("项目根目录下面创建 "),a("code",[s._v(".eslintignore")]),s._v(" "),a("code",[s._v("文件，这个文件告诉 ESLint 去忽略特定的文件和目录。")]),s._v(".eslintignore` 文件是一个纯文本文件，其中的每一行都是一个 glob 模式，表明哪些路径应该被忽略检测。例如，以下将忽略所有的 JavaScript 文件：")]),s._v(" "),a("blockquote",[a("p",[s._v("**/*.js")])])]),s._v(" "),a("li",[a("p",[s._v("当 ESLint 运行时，在确定哪些文件要检测之前，它会在"),a("strong",[s._v("当前工作目录")]),s._v("中查找一个 "),a("code",[s._v(".eslintignore")]),s._v(" 文件。如果发现了这个文件，当遍历目录时，将会应用这些偏好设置。一次只有一个 "),a("code",[s._v(".eslintignore")]),s._v(" 文件会被使用，所以，不是当前工作目录下的 "),a("code",[s._v(".eslintignore")]),s._v(" 文件将不会被用到。")])]),s._v(" "),a("li",[a("p",[s._v("可用的特性有：\n"),a("em",[s._v("以 # 开头的行被当作注释，不影响忽略模式。")]),s._v("\n路径是相对于 "),a("code",[s._v(".eslintignore")]),s._v(" 的位置或当前工作目录。\n"),a("em",[s._v("忽略模式同 "),a("code",[s._v(".gitignore")]),s._v(" 规范")]),s._v("\n以 "),a("code",[s._v("!")]),s._v(" 开头的行是否定模式，它将会重新包含一个之前被忽略的模式。\n除了 "),a("code",[s._v(".eslintignore")]),s._v(" 文件中的模式，ESLint总是忽略 "),a("code",[s._v("/node_modules/*")]),s._v(" 和 "),a("code",[s._v("/bower_components/*")]),s._v(" 中的文件。")])]),s._v(" "),a("li",[a("p",[s._v("例如：把下面 "),a("code",[s._v(".eslintignore")]),s._v(" 文件放到当前工作目录里，将忽略 "),a("code",[s._v("node_modules")]),s._v("，"),a("code",[s._v("bower_components")]),s._v(" 以及 "),a("code",[s._v("build/")]),s._v(" 目录下除了 "),a("code",[s._v("build/index.js")]),s._v(" 的所有文件。")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# /node_modules/* and /bower_components/* ignored by default\n\n# Ignore built files except build/index.js\nbuild/*\n!build/index.js\n")])])])])]),s._v(" "),a("h2",{attrs:{id:"notes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notes"}},[s._v("#")]),s._v(" Notes")]),s._v(" "),a("h3",{attrs:{id:"eslint-支持几种格式的配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint-支持几种格式的配置文件"}},[s._v("#")]),s._v(" ESLint 支持几种格式的配置文件：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("JavaScript")]),s._v(" - 使用 "),a("code",[s._v(".eslintrc.js")]),s._v(" 然后输出一个配置对象。")]),s._v(" "),a("li",[a("strong",[s._v("YAML")]),s._v(" - 使用 "),a("code",[s._v(".eslintrc.yaml")]),s._v(" 或 "),a("code",[s._v(".eslintrc.yml")]),s._v(" 去定义配置的结构。")]),s._v(" "),a("li",[a("strong",[s._v("JSON")]),s._v(" - 使用 "),a("code",[s._v(".eslintrc.json")]),s._v(" 去定义配置的结构，ESLint 的 JSON 文件允许 JavaScript 风格的注释。")]),s._v(" "),a("li",[a("strong",[s._v("(弃用)")]),s._v(" - 使用 "),a("code",[s._v(".eslintrc")]),s._v("，可以使 JSON 也可以是 YAML。")]),s._v(" "),a("li",[a("strong",[s._v("package.json")]),s._v(" - 在 "),a("code",[s._v("package.json")]),s._v(" 里创建一个 "),a("code",[s._v("eslintConfig")]),s._v("属性，在那里定义你的配置。")])]),s._v(" "),a("p",[s._v("如果同一个目录下有多个配置文件，ESLint 只会使用一个。优先级顺序如下：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v(".eslintrc.js")])]),s._v(" "),a("li",[a("code",[s._v(".eslintrc.yaml")])]),s._v(" "),a("li",[a("code",[s._v(".eslintrc.yml")])]),s._v(" "),a("li",[a("code",[s._v(".eslintrc.json")])]),s._v(" "),a("li",[a("code",[s._v(".eslintrc")])]),s._v(" "),a("li",[a("code",[s._v("package.json")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);