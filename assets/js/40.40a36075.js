(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{568:function(t,s,a){"use strict";a.r(s);var e=a(9),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-tag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-tag"}},[t._v("#")]),t._v(" git tag")]),t._v(" "),a("p",[a("code",[t._v("git tag")]),t._v("命令用于为 commit 打标签。Tag 分两种：普通tag和注解tag。只有annotated tag 才會產生 object。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag tmp "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 生成.git/refs/tags/tmp$ git tag -a release$ git tag -a [VERSION] -m "released [VERSION]"')]),t._v("\n")])])]),a("p",[t._v("上面代码表示为当前commit打上一个带注解的标签，标签名为release。")]),t._v(" "),a("p",[t._v("普通标签的写法。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(".0\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push --tags$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag v0.0.1\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master --tags\n")])])]),a("h2",{attrs:{id:"推送"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#推送"}},[t._v("#")]),t._v(" 推送")]),t._v(" "),a("p",[t._v("标签必须单独推送。也就是说，"),a("code",[t._v("git push")]),t._v("命令默认不会推送标签，必须使用"),a("code",[t._v("--tags")]),t._v("参数。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push --tags\n")])])]),a("p",[t._v("上面的命令先推送新的 commit，成功后再单独推送标签。")]),t._v(" "),a("p",[a("code",[t._v("--follow-tags")]),t._v("参数会使得 commit 以及与之相关的标签（注意，不是所有的标签）一起推送。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push --follow-tags\n")])])]),a("p",[t._v("Git 有一个对应于"),a("code",[t._v("--follow-tags")]),t._v("的配置项，默认是关闭的。如果将它打开，以后执行"),a("code",[t._v("git push")]),t._v("的时候，默认就会带上"),a("code",[t._v("--follow-tags")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global push.followTags "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);