(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{546:function(a,s,t){"use strict";t.r(s);var e=t(9),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"git-commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[a._v("#")]),a._v(" git commit")]),a._v(" "),t("p",[t("code",[a._v("git commit")]),a._v("命令用于将暂存区中的变化提交到仓库区。")]),a._v(" "),t("p",[t("code",[a._v("-m")]),a._v("参数用于指定 commit 信息，是必需的。如果省略"),t("code",[a._v("-m")]),a._v("参数，"),t("code",[a._v("git commit")]),a._v("会自动打开文本编辑器，要求输入。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"message"')]),a._v("\n")])])]),t("p",[t("code",[a._v("git commit")]),a._v("命令可以跳过暂存区，直接将文件从工作区提交到仓库区。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  -m "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"message"')]),a._v("\n")])])]),t("p",[a._v("上面命令会将工作区中指定文件的变化，先添加到暂存区，然后再将暂存区提交到仓库区。")]),a._v(" "),t("h2",{attrs:{id:"命令行参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令行参数"}},[a._v("#")]),a._v(" 命令行参数")]),a._v(" "),t("h3",{attrs:{id:"a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a"}},[a._v("#")]),a._v(" -a")]),a._v(" "),t("p",[t("code",[a._v("-a")]),a._v("参数用于先将所有工作区的变动文件，提交到暂存区，再运行"),t("code",[a._v("git commit")]),a._v("。用了"),t("code",[a._v("-a")]),a._v("参数，就不用执行"),t("code",[a._v("git add .")]),a._v("命令了。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit -am "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"message"')]),a._v("\n")])])]),t("p",[a._v("如果没有指定提交说明，运行下面的命令会直接打开默认的文本编辑器，让用户撰写提交说明。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit -a\n")])])]),t("h3",{attrs:{id:"allow-empty"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#allow-empty"}},[a._v("#")]),a._v(" —allow-empty")]),a._v(" "),t("p",[t("code",[a._v("--allow-empty")]),a._v("参数用于没有提交信息的 commit。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --allow-empty\n")])])]),t("h3",{attrs:{id:"amend"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#amend"}},[a._v("#")]),a._v(" —amend")]),a._v(" "),t("p",[t("code",[a._v("--amend")]),a._v("参数用于撤销上一次 commit，然后生成一个新的 commit。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --amend - m "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"new commit message"')]),a._v("\n")])])]),t("h3",{attrs:{id:"fixup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fixup"}},[a._v("#")]),a._v(" —fixup")]),a._v(" "),t("p",[t("code",[a._v("--fixup")]),a._v("参数的含义是，当前添加的 commit 是以前某一个 commit 的修正。以后执行互动式的"),t("code",[a._v("git rebase")]),a._v("的时候，这两个 commit 将会合并成一个。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --fixup "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("执行上面的命令，提交说明将自动生成，即在目标 commit 的提交说明的最前面，添加“fixup! ”这个词。")]),a._v(" "),t("h3",{attrs:{id:"m"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#m"}},[a._v("#")]),a._v(" -m")]),a._v(" "),t("p",[t("code",[a._v("-m")]),a._v("参数用于添加提交说明。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"message"')]),a._v("\n")])])]),t("h3",{attrs:{id:"squash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#squash"}},[a._v("#")]),a._v(" —squash")]),a._v(" "),t("p",[t("code",[a._v("--squash")]),a._v("参数的作用与"),t("code",[a._v("--fixup")]),a._v("类似，表示当前添加的 commit 应该与以前某一个 commit 合并成一个，以后执行互动式的"),t("code",[a._v("git rebase")]),a._v("的时候，这两个 commit 将会合并成一个。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v(" $ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --squash "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);